// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Ierr is an autogenerated mock type for the Ierr type
type Ierr struct {
	mock.Mock
}

// Error provides a mock function with given fields:
func (_m *Ierr) Error() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCode provides a mock function with given fields:
func (_m *Ierr) GetCode() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetHTTPCode provides a mock function with given fields:
func (_m *Ierr) GetHTTPCode() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Unwrap provides a mock function with given fields:
func (_m *Ierr) Unwrap() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIerr interface {
	mock.TestingT
	Cleanup(func())
}

// NewIerr creates a new instance of Ierr. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIerr(t mockConstructorTestingTNewIerr) *Ierr {
	mock := &Ierr{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
