// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	multipart "mime/multipart"
)

// SendRequestInterface is an autogenerated mock type for the SendRequestInterface type
type SendRequestInterface struct {
	mock.Mock
}

// SendRequest provides a mock function with given fields: ctx, file, extensionFile
func (_m *SendRequestInterface) SendRequest(ctx *gin.Context, file *multipart.FileHeader, extensionFile string) (string, error) {
	ret := _m.Called(ctx, file, extensionFile)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, *multipart.FileHeader, string) (string, error)); ok {
		return rf(ctx, file, extensionFile)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, *multipart.FileHeader, string) string); ok {
		r0 = rf(ctx, file, extensionFile)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, *multipart.FileHeader, string) error); ok {
		r1 = rf(ctx, file, extensionFile)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSendRequestInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewSendRequestInterface creates a new instance of SendRequestInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSendRequestInterface(t mockConstructorTestingTNewSendRequestInterface) *SendRequestInterface {
	mock := &SendRequestInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
