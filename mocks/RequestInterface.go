// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "excel-receiver/entity"

	mock "github.com/stretchr/testify/mock"
)

// RequestInterface is an autogenerated mock type for the RequestInterface type
type RequestInterface struct {
	mock.Mock
}

// CreateRequest provides a mock function with given fields: ctx, payload
func (_m *RequestInterface) CreateRequest(ctx context.Context, payload *entity.Request) (string, error) {
	ret := _m.Called(ctx, payload)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Request) (string, error)); ok {
		return rf(ctx, payload)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Request) string); ok {
		r0 = rf(ctx, payload)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *entity.Request) error); ok {
		r1 = rf(ctx, payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRequestInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestInterface creates a new instance of RequestInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestInterface(t mockConstructorTestingTNewRequestInterface) *RequestInterface {
	mock := &RequestInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
